#! /usr/bin/env python
import rospy
from sensor_msgs.msg import JointState
from robot_model.msg import wheelInfo

class JointStateToWheelInfoPub:
    def __init__(self):
        self.pub = rospy.Publisher('wheel_state', wheelInfo, queue_size=1)
        self.sub = rospy.Subscriber('adobe/joint_states', JointState, self.callback)
        self.sim_joint_state = JointState()
        self.wheel_state = wheelInfo()
        self.rate = rospy.Rate(1000)
        
    def callback(self, msg):
        self.sim_joint_state = msg
        self.wheel_state.lwPos = (float)(self.sim_joint_state.position[0])
        self.wheel_state.rwPos = (float)(self.sim_joint_state.position[1])
    def publish(self):
        self.pub.publish(self.wheel_state)
    def main(self):
        while not rospy.is_shutdown():
            self.publish()
            self.rate.sleep()

if __name__ == '__main__':
    try:
        rospy.init_node('joint_state_to_wheel_info_publisher')
        node = JointStateToWheelInfoPub()
        node.main()
    except rospy.ROSInterruptException:
        pass
